@model AgilleApi.Domain.ViewModel.ReportViewModel
@{
    Layout = null;
}
<!DOCTYPE html>
<html lang="en-us">
<head>
    <meta http-equiv="X-UA-Compatible" content="IE=Edge" />
    <meta charset="utf-8" />
    <title>Report</title>

    <style>
        /* http://meyerweb.com/eric/tools/css/reset/
                                                        v2.0 | 20110126
                                                        License: none (public domain)
                                                        */

        html, body, div, span, applet, object, iframe,
        h1, h2, h3, h4, h5, h6, p, blockquote, pre,
        a, abbr, acronym, address, big, cite, code,
        del, dfn, em, img, ins, kbd, q, s, samp,
        small, strike, strong, sub, sup, tt, var,
        b, u, i, center,
        dl, dt, dd, ol, ul, li,
        fieldset, form, label, legend,
        table, caption, tbody, tfoot, thead, tr, th, td,
        article, aside, canvas, details, embed,
        figure, figcaption, footer, header, hgroup,
        menu, nav, output, ruby, section, summary,
        time, mark, audio, video {
            margin: 0;
            padding: 0;
            border: 0;
            font-size: 100%;
            font: inherit;
            vertical-align: baseline;
        }
        /* HTML5 display-role reset for older browsers */
        article, aside, details, figcaption, figure,
        footer, header, hgroup, menu, nav, section {
            display: block;
        }

        body {
            line-height: 1;
        }

        ol, ul {
            list-style: none;
        }

        blockquote, q {
            quotes: none;
        }

            blockquote:before, blockquote:after,
            q:before, q:after {
                content: '';
                content: none;
            }

        table {
            border-collapse: collapse;
            border-spacing: 0;
        }

        body {
            font-family: 'Montserrat', sans-serif;
            font-size: 20px;
        }

        table {
            width: 940px;
            margin: 20px auto;
        }

        td {
            border: 2px solid black;
            border-top: none;
            padding: 2px;
            font-size: 20px;
            color: black;
        }

        .center {
            text-align: center;
        }
        .right{
            text-align: right;
        }

        .left {
            text-align: left;
        }
    </style>

    <!-- Razor table config -->
    <style type="text/css">
        table {
            page-break-inside: auto
        }

        tr {
            page-break-inside: avoid;
            page-break-after: auto
        }

        thead {
            display: table-header-group
        }

        tfoot {
            display: table-footer-group
        }
    </style>
</head>
<body>
    @{
        if (Model.HasImage && Model.HasTitle)
        {

            <div style="width: 48%;height:150px;display: inline-block;">
                <img src="@Model.Image" alt="logo" style="height:150px;float: left;">
            </div>
            <div style="width: 48%;float: right;text-align: right;">
                <p>@Model.EntityName</p>
                <p>@Model.EntityDocument</p>
            </div>

            <div style="width: 100%; height: 100%; padding-top: 25px; padding-bottom: 15px;">
                <div class="center" style="font-weight:bold">
                    @Model.Title
                </div>
                @if (Model.HasInterval)
                {
                    <div style="vertical-align: middle; padding-top: 16px;">
                        Período: @Model.StartingReference.Value.ToShortDateString() até @Model.EndingReference.Value.ToShortDateString()
                    </div>
                }
            </div>
            
        }
        else if (Model.HasImage)
        {
            <div class="center" style="width: 100%;">
                <img src="@Model.Image" alt="logo" style="width:150px;height:150px; display: block; margin: auto;">
            </div>
        }
        else if (Model.HasTitle)
        {
            <div style="font-size: 25px;">
                <div>
                    <div class="center" style="font-weight:bold">
                        <h1>@Model.Title</h1>
                    </div>
                    @if (Model.HasInterval)
                    {
                        <h3 style="font-size: 22px;">Período: @Model.StartingReference.Value.ToShortDateString() até @Model.EndingReference.Value.ToShortDateString()</h3>
                    }
                </div>
            </div>
        }
    }

    <table style="width: 100%;">
        <tr>
            @{
                foreach (var header in Model.Headers)
                {
                    <td class="center" style="border: 2px solid black; font-weight:bold;">@header.ToUpper()</td>
                }
            }
        </tr>
        @{
            foreach (var row in Model.ObjectFields)
            {
                <tr>
                    @for(var i = 0; i < row.Count; i++)
                    {
                        var cell = row[i];
                        var alignment = "center";
                        if (Model.HasFieldAlignments)
                            alignment = Model.FieldAlignments[i];
                        <td class="@alignment">@cell</td>
                    }
                </tr>
            }
        }
    </table>

    @if (Model.HasTotalRecords)
    {
        <div class="right">
            Total de Registros: @Model.TotalRecords
        </div>
    }
    @if (Model.HasTotal)
    {
        <div class="right">
            Total: @Model.Total
        </div>
    }
    @if (Model.HasCollectionTotals)
    {
        <div class="right">
            Total Valor Principal: @Model.CollectionTotals.TotalSelicValue
        </div>
        <div class="right">
            Total Recolhimento PASEP: @Model.CollectionTotals.TotalPasepValue
        </div>
    }
    @if (Model.HasRequestedBy)
    {
        <div>
            Relatório extraído por: @Model.RequestedBy
        </div>
    }
    <div>
        Data: @DateTime.Now.ToShortDateString()</br>
        Horário: @DateTime.UtcNow.AddHours(-3).ToString("HH:mm")</br>
    </div>

</body>
</html>